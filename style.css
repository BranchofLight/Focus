html {
  font-family: sans-serif;
  height: 100%;
}

body {
  width: 100%;
  height: 100%
  -webkit-perspective: 1200px;
  -moz-perspective: 1200px;
  -ms-perspective: 1200px;
  -o-perspective: 1200px;
  perspective: 1200px;
  -webkit-perspective-origin: 50% 50%;
  -moz-perspective-origin: 50% 50%;
  -ms-perspective-origin: 50% 50%;
  -o-perspective-origin: 50% 50%;
  perspective-origin: 50% 50%;
  margin: 0;
  background: linear-gradient(to bottom, rgba(100, 100, 100, 0.2) 0%, rgba(255, 255, 255, 0.5) 40%, #ffffff 75%, rgba(100, 100, 100, 0.2));
  background-repeat: no-repeat;
}

#board-border {
  width: 540px;
  height: 540px;
  position: relative;
  overflow: hidden;
  margin: 20px auto;
  display: flex;
  flex-direction: column;
  padding: 30px;
  filter: drop-shadow(0 2px 8px black);
  -webkit-filter: drop-shadow(0 2px 8px black);
}

#board {
  width: 500px;
  height: 500px;
  z-index: 1;
  position: absolute;
  top: 0; right: 0; bottom: 0; left: 0;
  overflow: hidden;
  transform: rotate(45deg);
  border: 20px solid rgba(0, 0, 0, 0.2);
  background-image: url(board.jpg);
  background-position: center center;
  background-size: cover;
  padding: 30px;
}

#board:after {
  position: absolute;
  /* There needs to be a negative value here to cancel
   * out the width of the border. It's currently -3px,
   * but if the border were 5px, then it'd be -5px.
   */
  top: -20px; right: -20px; bottom: -20px; left: -20px;
  transform: rotate(45deg);
  content: '';
  border: inherit;
}

#captures-box {
  display: flex;
  width: 100%;
}

.row {
  flex: 1;
  display: flex;
  z-index: 2;
}

.cell {
  flex: 1;
  margin: 7px;
  color: rgba(255, 255, 255, 0.7);
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  position: relative;
}

.cell:not(.jk) {
  border-radius: 50%;
}

.cell:empty:not(.jk) {
  box-shadow: inset 1px 1px 15px rgba(0, 0, 0, 0.7);
}

.cell:not(:empty) {
  box-shadow: 1px 1px 3px #444, inset 1px 1px 13px #444;
  text-shadow: 0px 0px 4px rgba(255, 255, 255, 0.4);
}

.cell.red {
  background: radial-gradient(circle at 50% 120%, #f68181, #ef7676 10%, #940505 80%, #450606 100%);
}

.cell.green {
  background: radial-gradient(circle at 50% 120%, #81f398, #76ef7f 10%, #059424 80%, #064528 100%);
}

.selected {  
  filter:  drop-shadow(2px 2px 1px #c1f2ff)
           drop-shadow(-2px -2px 1px #c1f2ff)
           drop-shadow(-2px 2px 1px #c1f2ff)
           drop-shadow(2px -2px 1px #c1f2ff);
  box-shadow: none !important;
}

.captures {
  display: flex;
  border: 3px dashed gray;
  color: gray;
  text-transform: uppercase;
  min-height: 62px;
  margin: 15px;
  flex: 1;
  border-radius: 10px;
}

.captures .cell {
  flex: none;
  height: calc(500px / 8 * 0.7);
  width: calc(500px / 8 * 0.7);
}

.captures.red:before {
  content: 'Red';
  margin: 5px;
  display: inline-block;
}

.captures.green:before {
  content: 'Green';
  margin: 5px;
  display: inline-block;
}

.cell:not(:empty):before {
  content: "";
  position: absolute;
  top: 5%;
  left: 6%;
  width: 73%;
  height: 90%;
  border-radius: 50%;
  background: radial-gradient(circle at 50% 0px, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0) 58%);
  -webkit-filter: blur(1px);
  z-index: 2;
}

.cell:not(:empty):after {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  background: radial-gradient(circle at 50% 50%, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.1) 35%, rgba(0, 0, 0, 0) 50%);
  z-index: 0;
  top: 0;
  left: 0;
}
